{"ast":null,"code":"var _jsxFileName = \"/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/components/shop/ProductListing.tsx\";\nimport { store } from \"../../store\";\nimport Client from \"shopify-buy\";\nimport { CLIENT_CREATED, PRODUCTS_FETCHED } from \"../../store/shopify/types\";\nimport Cart from \"./Cart\";\nimport Products from \"./Products\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductListing = () => {\n  async function setupConnection() {\n    const client = Client.buildClient({\n      storefrontAccessToken: \"a1178a7f9b78103ca595c3965e8075c9\",\n      domain: \"rcc-test-store2.myshopify.com\"\n    }); //console.log(`client -> ${JSON.stringify(client)}`);\n\n    store.dispatch({\n      type: CLIENT_CREATED,\n      payload: {\n        client\n      }\n    }); //console.log(`about to build products -> ${JSON.stringify(client.product.fetchAll())}`);\n    // products\n\n    const products = await client.product.fetchAll();\n    console.log(`products -> ${JSON.stringify(products)}`);\n    store.dispatch({\n      type: PRODUCTS_FETCHED,\n      payload: {\n        products\n      }\n    });\n    client.product.fetchAll().then(products2 => {\n      // Do something with the products\n      console.log(\"products2 -> \", products2);\n    }); //console.log(`products -> ${JSON.stringify(products)}`);\n    //console.log(`about to cart -> ${JSON.stringify(client.checkout.create())}`);\n    // cart\n    //const cart = await client.checkout.create();\n    //store.dispatch({ type: CHECKOUT_CREATED, payload: { cart } });\n    //console.log(`cart -> ${JSON.stringify(cart)}`);\n    // shop\n    //const shop = await client.shop.fetchInfo();\n    //store.dispatch({ type: SHOP_INFO_FETCHED, payload: { shop } });\n    //console.log(`shop -> ${JSON.stringify(shop)}`);\n  }\n\n  setupConnection();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Product Listing\"\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ProductListing;\nexport default ProductListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListing\");","map":{"version":3,"sources":["/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/components/shop/ProductListing.tsx"],"names":["store","Client","CLIENT_CREATED","PRODUCTS_FETCHED","Cart","Products","ProductListing","setupConnection","client","buildClient","storefrontAccessToken","domain","dispatch","type","payload","products","product","fetchAll","console","log","JSON","stringify","then","products2"],"mappings":";AACA,SAASA,KAAT,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SACIC,cADJ,EAEIC,gBAFJ,QAKO,2BALP;AAMA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAE3B,iBAAeC,eAAf,GAAiC;AAC/B,UAAMC,MAAM,GAAGP,MAAM,CAACQ,WAAP,CAAmB;AAChCC,MAAAA,qBAAqB,EAAE,kCADS;AAEhCC,MAAAA,MAAM,EAAE;AAFwB,KAAnB,CAAf,CAD+B,CAM/B;;AAEAX,IAAAA,KAAK,CAACY,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEX,cAAR;AAAwBY,MAAAA,OAAO,EAAE;AAAEN,QAAAA;AAAF;AAAjC,KAAf,EAR+B,CAU/B;AAEM;;AACA,UAAMO,QAAQ,GAAG,MAAMP,MAAM,CAACQ,OAAP,CAAeC,QAAf,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAyB,EAApD;AACAf,IAAAA,KAAK,CAACY,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAEV,gBADK;AAEXW,MAAAA,OAAO,EAAE;AACLC,QAAAA;AADK;AAFE,KAAf;AAOAP,IAAAA,MAAM,CAACQ,OAAP,CAAeC,QAAf,GAA0BK,IAA1B,CAAgCC,SAAD,IAAe;AAC5C;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BI,SAA7B;AACD,KAHD,EAtByB,CA2BzB;AAGA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEP;;AAEDhB,EAAAA,eAAe;AAGf,sBACE;AAAA,4BACA;AAAA;AAAA,qBADA,eAEA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAOD,CA3DD;;KAAMD,c;AA6DN,eAAeA,cAAf","sourcesContent":["import { Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport { store } from \"../../store\";\nimport Client from \"shopify-buy\";\nimport {\n    CLIENT_CREATED,\n    PRODUCTS_FETCHED,\n    CHECKOUT_CREATED,\n    SHOP_INFO_FETCHED,\n} from \"../../store/shopify/types\";\nimport Cart from \"./Cart\";\nimport Products from \"./Products\";\n\nconst ProductListing = () => {\n\n  async function setupConnection() {\n    const client = Client.buildClient({\n      storefrontAccessToken: \"a1178a7f9b78103ca595c3965e8075c9\",\n      domain: \"rcc-test-store2.myshopify.com\",\n    });\n\n    //console.log(`client -> ${JSON.stringify(client)}`);\n  \n    store.dispatch({ type: CLIENT_CREATED, payload: { client } });\n  \n    //console.log(`about to build products -> ${JSON.stringify(client.product.fetchAll())}`);\n\n          // products\n          const products = await client.product.fetchAll();\n          console.log(`products -> ${JSON.stringify(products)}`);\n          store.dispatch({\n              type: PRODUCTS_FETCHED,\n              payload: {\n                  products,\n              },\n          });\n\n          client.product.fetchAll().then((products2) => {\n            // Do something with the products\n            console.log(\"products2 -> \", products2);\n          });\n\n          //console.log(`products -> ${JSON.stringify(products)}`);\n\n  \n          //console.log(`about to cart -> ${JSON.stringify(client.checkout.create())}`);\n          \n          // cart\n          //const cart = await client.checkout.create();\n          //store.dispatch({ type: CHECKOUT_CREATED, payload: { cart } });\n\n          //console.log(`cart -> ${JSON.stringify(cart)}`);\n  \n  \n          // shop\n          //const shop = await client.shop.fetchInfo();\n          //store.dispatch({ type: SHOP_INFO_FETCHED, payload: { shop } });\n\n          //console.log(`shop -> ${JSON.stringify(shop)}`);\n  \n  }\n\n  setupConnection();\n  \n\n  return (\n    <>\n    <>Product Listing</>\n    <Products />\n    <Cart />\n    </>\n  )\n}\n\nexport default ProductListing;"]},"metadata":{},"sourceType":"module"}