{"ast":null,"code":"import { store } from \"../../store\";\nimport Client from \"shopify-buy\";\nimport { CLIENT_CREATED, PRODUCTS_FETCHED, CHECKOUT_CREATED, SHOP_INFO_FETCHED } from \"../../store/shopify/types\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductListing = () => {\n  async function setupConnection() {\n    const client = Client.buildClient({\n      storefrontAccessToken: \"89b443e70beaf48d7ab68267f53e0fc6\",\n      domain: \"rcc-test-store2.myshopify.com\"\n    });\n    console.log(`client -> ${JSON.stringify(client)}`);\n    store.dispatch({\n      type: CLIENT_CREATED,\n      payload: {\n        client\n      }\n    }); // products\n\n    const products = await client.product.fetchAll();\n    console.log(`products -> ${JSON.stringify(products)}`);\n    store.dispatch({\n      type: PRODUCTS_FETCHED,\n      payload: {\n        products\n      }\n    });\n    console.log(`products -> ${JSON.stringify(products)}`); // cart\n\n    const cart = await client.checkout.create();\n    store.dispatch({\n      type: CHECKOUT_CREATED,\n      payload: {\n        cart\n      }\n    });\n    console.log(`cart -> ${JSON.stringify(cart)}`); // shop\n\n    const shop = await client.shop.fetchInfo();\n    store.dispatch({\n      type: SHOP_INFO_FETCHED,\n      payload: {\n        shop\n      }\n    });\n    console.log(`shop -> ${JSON.stringify(shop)}`);\n  }\n\n  setupConnection();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Product Listing\"\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_c = ProductListing;\nexport default ProductListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListing\");","map":{"version":3,"sources":["/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/components/shop/ProductListing.tsx"],"names":["store","Client","CLIENT_CREATED","PRODUCTS_FETCHED","CHECKOUT_CREATED","SHOP_INFO_FETCHED","ProductListing","setupConnection","client","buildClient","storefrontAccessToken","domain","console","log","JSON","stringify","dispatch","type","payload","products","product","fetchAll","cart","checkout","create","shop","fetchInfo"],"mappings":"AACA,SAASA,KAAT,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SACIC,cADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,iBAJJ,QAKO,2BALP;;;;AASA,MAAMC,cAAc,GAAG,MAAM;AAE3B,iBAAeC,eAAf,GAAiC;AAC/B,UAAMC,MAAM,GAAGP,MAAM,CAACQ,WAAP,CAAmB;AAChCC,MAAAA,qBAAqB,EAAE,kCADS;AAEhCC,MAAAA,MAAM,EAAE;AAFwB,KAAnB,CAAf;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAuB,EAAhD;AAEAR,IAAAA,KAAK,CAACgB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEf,cAAR;AAAwBgB,MAAAA,OAAO,EAAE;AAAEV,QAAAA;AAAF;AAAjC,KAAf,EAR+B,CAUzB;;AACA,UAAMW,QAAQ,GAAG,MAAMX,MAAM,CAACY,OAAP,CAAeC,QAAf,EAAvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcC,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAyB,EAApD;AACAnB,IAAAA,KAAK,CAACgB,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAEd,gBADK;AAEXe,MAAAA,OAAO,EAAE;AACLC,QAAAA;AADK;AAFE,KAAf;AAOAP,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcC,IAAI,CAACC,SAAL,CAAeI,QAAf,CAAyB,EAApD,EApByB,CAsBzB;;AACA,UAAMG,IAAI,GAAG,MAAMd,MAAM,CAACe,QAAP,CAAgBC,MAAhB,EAAnB;AACAxB,IAAAA,KAAK,CAACgB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,MAAAA,OAAO,EAAE;AAAEI,QAAAA;AAAF;AAAnC,KAAf;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUC,IAAI,CAACC,SAAL,CAAeO,IAAf,CAAqB,EAA5C,EA1ByB,CA6BzB;;AACA,UAAMG,IAAI,GAAG,MAAMjB,MAAM,CAACiB,IAAP,CAAYC,SAAZ,EAAnB;AACA1B,IAAAA,KAAK,CAACgB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEZ,iBAAR;AAA2Ba,MAAAA,OAAO,EAAE;AAAEO,QAAAA;AAAF;AAApC,KAAf;AAEAb,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUC,IAAI,CAACC,SAAL,CAAeU,IAAf,CAAqB,EAA5C;AAEP;;AAEDlB,EAAAA,eAAe;AAGf,sBACE;AAAA,2BACA;AAAA;AAAA;AADA,mBADF;AAOD,CAjDD;;KAAMD,c;AAmDN,eAAeA,cAAf","sourcesContent":["import { Box } from \"@material-ui/core\";\nimport { store } from \"../../store\";\nimport Client from \"shopify-buy\";\nimport {\n    CLIENT_CREATED,\n    PRODUCTS_FETCHED,\n    CHECKOUT_CREATED,\n    SHOP_INFO_FETCHED,\n} from \"../../store/shopify/types\";\nimport Cart from \"./Cart\";\nimport Products from \"./Products\";\n\nconst ProductListing = () => {\n\n  async function setupConnection() {\n    const client = Client.buildClient({\n      storefrontAccessToken: \"89b443e70beaf48d7ab68267f53e0fc6\",\n      domain: \"rcc-test-store2.myshopify.com\",\n    });\n\n    console.log(`client -> ${JSON.stringify(client)}`);\n  \n    store.dispatch({ type: CLIENT_CREATED, payload: { client } });\n  \n          // products\n          const products = await client.product.fetchAll();\n          console.log(`products -> ${JSON.stringify(products)}`);\n          store.dispatch({\n              type: PRODUCTS_FETCHED,\n              payload: {\n                  products,\n              },\n          });\n\n          console.log(`products -> ${JSON.stringify(products)}`);\n  \n          // cart\n          const cart = await client.checkout.create();\n          store.dispatch({ type: CHECKOUT_CREATED, payload: { cart } });\n\n          console.log(`cart -> ${JSON.stringify(cart)}`);\n  \n  \n          // shop\n          const shop = await client.shop.fetchInfo();\n          store.dispatch({ type: SHOP_INFO_FETCHED, payload: { shop } });\n\n          console.log(`shop -> ${JSON.stringify(shop)}`);\n  \n  }\n\n  setupConnection();\n  \n\n  return (\n    <>\n    <>Product Listing</>\n    {/*<Products />*/}\n    {/*<Cart />*/}\n    </>\n  )\n}\n\nexport default ProductListing;"]},"metadata":{},"sourceType":"module"}