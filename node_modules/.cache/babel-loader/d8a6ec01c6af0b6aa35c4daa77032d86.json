{"ast":null,"code":"var _jsxFileName = \"/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/components/shop/ProductComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from \"@material-ui/core\";\nimport { RccCartButton } from \"../common/Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductComponent(props) {\n  _s();\n\n  const {\n    product\n  } = props;\n  const variants = useSelector(state => state.variants);\n  const {\n    selectedVariant,\n    selectedVariantImage,\n    selectedVariantQuantity\n  } = variants;\n  const variantImage = selectedVariantImage || product.images[0];\n  const variant = selectedVariant || product.variants[0];\n  const variantQuantity = selectedVariantQuantity || 1;\n  console.log(` product -> ${JSON.stringify(product)}`);\n  return (\n    /*#__PURE__*/\n\n    /*<div className=\"Product\">\n      {product.images.length ? (\n        <img src={variantImage.src} alt={`${product.title} product shot`} />\n      ) : null}\n      <h5 className=\"Product__title\">{product.title}</h5>\n      <p>${variant.price}</p>\n      {product.options.map((option) => {\n        return <VariantSelector key={option.name} option={option} />;\n      })}\n      <label className=\"Product__option\">\n        Quantity:{\" \"}\n        <input\n          className=\"form-control\"\n          min=\"1\"\n          type=\"number\"\n          defaultValue={variantQuantity}\n          onChange={(event) => handleQuantityChange}\n        ></input>\n      </label>\n      <button\n        className=\"Product__buy button\"\n        onClick={() => addVariantToCart(variant.id, variantQuantity)}\n      >\n        Add to Cart\n      </button>\n    </div>*/\n    _jsxDEV(Grid, {\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mx: 2,\n        mb: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            minHeight: \"300px\",\n            maxHeight: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              style: {\n                minHeight: \"150px\",\n                maxHeight: \"150px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                image: variantImage.src,\n                title: \"Contemplative Reptile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: product.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: product.description && product.description.substring(0, 20)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(RccCartButton, {\n              onClick: () => console.log(\"click share\"),\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(ProductComponent, \"rWwslipdmUe3sIFK6Q9VeQiRDhE=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProductComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductComponent\");","map":{"version":3,"sources":["/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/components/shop/ProductComponent.tsx"],"names":["React","useSelector","Box","Card","CardActionArea","CardActions","CardContent","CardMedia","Grid","Typography","RccCartButton","ProductComponent","props","product","variants","state","selectedVariant","selectedVariantImage","selectedVariantQuantity","variantImage","images","variant","variantQuantity","console","log","JSON","stringify","minHeight","maxHeight","src","title","description","substring"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport VariantSelector from \"./VariantSelector\";\nimport { Product } from \"shopify-buy\";\nimport { addVariantToCart } from \"../../store/shopify/actions\";\nimport { handleQuantityChange } from \"../../store/variants/actions\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from \"@material-ui/core\";\nimport { RccCartButton, RccNavButton } from \"../common/Buttons\";\n\ninterface IProductProps {\n  product: Product;\n}\n\nexport default function ProductComponent(props: IProductProps) {\n  const { product } = props;\n  const variants = useSelector((state: RootState) => state.variants);\n  const {\n    selectedVariant,\n    selectedVariantImage,\n    selectedVariantQuantity,\n  } = variants;\n  const variantImage = selectedVariantImage || product.images[0];\n  const variant = selectedVariant || product.variants[0];\n  const variantQuantity = selectedVariantQuantity || 1;\n\n  console.log(` product -> ${JSON.stringify(product)}`);\n  return (\n    /*<div className=\"Product\">\n      {product.images.length ? (\n        <img src={variantImage.src} alt={`${product.title} product shot`} />\n      ) : null}\n      <h5 className=\"Product__title\">{product.title}</h5>\n      <p>${variant.price}</p>\n      {product.options.map((option) => {\n        return <VariantSelector key={option.name} option={option} />;\n      })}\n      <label className=\"Product__option\">\n        Quantity:{\" \"}\n        <input\n          className=\"form-control\"\n          min=\"1\"\n          type=\"number\"\n          defaultValue={variantQuantity}\n          onChange={(event) => handleQuantityChange}\n        ></input>\n      </label>\n      <button\n        className=\"Product__buy button\"\n        onClick={() => addVariantToCart(variant.id, variantQuantity)}\n      >\n        Add to Cart\n      </button>\n    </div>*/\n    \n      \n      <Grid xs={3}>\n        <Box mx={2} mb={3}>\n          <Card style={{ minHeight: \"300px\", maxHeight: \"300px\"}}>\n            <CardActionArea>\n              <Box style={{ minHeight: \"150px\", maxHeight: \"150px\"}}>\n                <CardMedia\n                  image={variantImage.src}\n                  title=\"Contemplative Reptile\"\n                />\n              </Box>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {product.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {product.description && (product.description.substring(0,20)) }\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <RccCartButton onClick={() => console.log(\"click share\")}>\n                Add to Cart\n              </RccCartButton>\n            </CardActions>\n          </Card>\n        </Box>\n      </Grid>\n      \n  );\n}"]},"metadata":{},"sourceType":"module"}