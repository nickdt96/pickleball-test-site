{"ast":null,"code":"import { store } from \"..\";\nexport function addVariantToCart(variantId, quantity) {\n  const {\n    shopify\n  } = store.getState();\n  const {\n    cart,\n    client\n  } = shopify;\n  const lineItemsToAdd = [{\n    variantId,\n    quantity\n  }];\n  console.log(` variantId -> ${JSON.stringify(variantId)}`);\n  console.log(` quantity -> ${JSON.stringify(quantity)}`);\n\n  if (cart && client) {\n    const checkoutId = cart.id;\n    client.checkout.addLineItems(checkoutId, lineItemsToAdd);\n  }\n}\nexport function decrementQuantity(lineItem) {\n  const updatedQuantity = lineItem.quantity - 1;\n  updateQuantityInCart(lineItem.id, updatedQuantity);\n}\nexport function incrementQuantity(lineItem) {\n  const updatedQuantity = lineItem.quantity + 1;\n  updateQuantityInCart(lineItem.id, updatedQuantity);\n}\nexport function removeLineItemFromCart(lineItemId) {\n  const {\n    shopify\n  } = store.getState();\n  const {\n    cart,\n    client\n  } = shopify;\n\n  if (client && cart) {\n    const checkoutId = cart.id;\n    client.checkout.removeLineItems(checkoutId, [lineItemId.toString()]);\n  }\n}\n\nfunction updateQuantityInCart(id, quantity) {\n  const {\n    shopify\n  } = store.getState();\n  const {\n    cart,\n    client\n  } = shopify;\n\n  if (client && cart) {\n    const checkoutId = cart.id;\n    client.checkout.updateLineItems(checkoutId, [{\n      id,\n      quantity\n    }]);\n  }\n}","map":{"version":3,"sources":["/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/store/shopify/actions.ts"],"names":["store","addVariantToCart","variantId","quantity","shopify","getState","cart","client","lineItemsToAdd","console","log","JSON","stringify","checkoutId","id","checkout","addLineItems","decrementQuantity","lineItem","updatedQuantity","updateQuantityInCart","incrementQuantity","removeLineItemFromCart","lineItemId","removeLineItems","toString","updateLineItems"],"mappings":"AAAA,SAASA,KAAT,QAAsB,IAAtB;AAGA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAsDC,QAAtD,EAAwE;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,KAAK,CAACK,QAAN,EAApB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBH,OAAzB;AACA,QAAMI,cAAc,GAAG,CAAC;AAAEN,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,CAAvB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBC,IAAI,CAACC,SAAL,CAAeV,SAAf,CAA0B,EAAvD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAAyB,EAArD;;AACA,MAAIG,IAAI,IAAIC,MAAZ,EAAoB;AAChB,UAAMM,UAAU,GAAGP,IAAI,CAACQ,EAAxB;AACAP,IAAAA,MAAM,CAACQ,QAAP,CAAgBC,YAAhB,CAA6BH,UAA7B,EAAyCL,cAAzC;AACH;AACJ;AAED,OAAO,SAASS,iBAAT,CAA2BC,QAA3B,EAA+C;AAClD,QAAMC,eAAe,GAAGD,QAAQ,CAACf,QAAT,GAAoB,CAA5C;AACAiB,EAAAA,oBAAoB,CAACF,QAAQ,CAACJ,EAAV,EAAcK,eAAd,CAApB;AACH;AAED,OAAO,SAASE,iBAAT,CAA2BH,QAA3B,EAA+C;AAClD,QAAMC,eAAe,GAAGD,QAAQ,CAACf,QAAT,GAAoB,CAA5C;AACAiB,EAAAA,oBAAoB,CAACF,QAAQ,CAACJ,EAAV,EAAcK,eAAd,CAApB;AACH;AAED,OAAO,SAASG,sBAAT,CAAgCC,UAAhC,EAA6D;AAChE,QAAM;AAAEnB,IAAAA;AAAF,MAAcJ,KAAK,CAACK,QAAN,EAApB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBH,OAAzB;;AACA,MAAIG,MAAM,IAAID,IAAd,EAAoB;AAChB,UAAMO,UAAU,GAAGP,IAAI,CAACQ,EAAxB;AACAP,IAAAA,MAAM,CAACQ,QAAP,CAAgBS,eAAhB,CAAgCX,UAAhC,EAA4C,CAACU,UAAU,CAACE,QAAX,EAAD,CAA5C;AACH;AACJ;;AAED,SAASL,oBAAT,CAA8BN,EAA9B,EAAmDX,QAAnD,EAAqE;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,KAAK,CAACK,QAAN,EAApB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBH,OAAzB;;AACA,MAAIG,MAAM,IAAID,IAAd,EAAoB;AAChB,UAAMO,UAAU,GAAGP,IAAI,CAACQ,EAAxB;AACAP,IAAAA,MAAM,CAACQ,QAAP,CAAgBW,eAAhB,CAAgCb,UAAhC,EAA4C,CAAC;AAAEC,MAAAA,EAAF;AAAMX,MAAAA;AAAN,KAAD,CAA5C;AACH;AACJ","sourcesContent":["import { store } from \"..\";\nimport { LineItem } from \"shopify-buy\";\n\nexport function addVariantToCart(variantId: string | number, quantity: number) {\n    const { shopify } = store.getState();\n    const { cart, client } = shopify;\n    const lineItemsToAdd = [{ variantId, quantity }];\n    console.log(` variantId -> ${JSON.stringify(variantId)}`);\n    console.log(` quantity -> ${JSON.stringify(quantity)}`);\n    if (cart && client) {\n        const checkoutId = cart.id;\n        client.checkout.addLineItems(checkoutId, lineItemsToAdd);\n    }\n}\n\nexport function decrementQuantity(lineItem: LineItem) {\n    const updatedQuantity = lineItem.quantity - 1;\n    updateQuantityInCart(lineItem.id, updatedQuantity);\n}\n\nexport function incrementQuantity(lineItem: LineItem) {\n    const updatedQuantity = lineItem.quantity + 1;\n    updateQuantityInCart(lineItem.id, updatedQuantity);\n}\n\nexport function removeLineItemFromCart(lineItemId: string | number) {\n    const { shopify } = store.getState();\n    const { cart, client } = shopify;\n    if (client && cart) {\n        const checkoutId = cart.id;\n        client.checkout.removeLineItems(checkoutId, [lineItemId.toString()]);\n    }\n}\n\nfunction updateQuantityInCart(id: string | number, quantity: number) {\n    const { shopify } = store.getState();\n    const { cart, client } = shopify;\n    if (client && cart) {\n        const checkoutId = cart.id;\n        client.checkout.updateLineItems(checkoutId, [{ id, quantity }]);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}