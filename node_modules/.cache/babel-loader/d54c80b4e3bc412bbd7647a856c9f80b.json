{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{store}from\"../../store\";import Client from\"shopify-buy\";import{CLIENT_CREATED,PRODUCTS_FETCHED}from\"../../store/shopify/types\";import Cart from\"./Cart\";import Products from\"./Products\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProductListing=function ProductListing(){function setupConnection(){return _setupConnection.apply(this,arguments);}function _setupConnection(){_setupConnection=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var client,products,query;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:client=Client.buildClient({storefrontAccessToken:\"a1178a7f9b78103ca595c3965e8075c9\",domain:\"rcc-test-store2.myshopify.com\"});//console.log(`client -> ${JSON.stringify(client)}`);\nstore.dispatch({type:CLIENT_CREATED,payload:{client:client}});//console.log(`about to build products -> ${JSON.stringify(client.product.fetchAll())}`);\n// products\n_context.next=4;return client.product.fetchAll(2);case 4:products=_context.sent;console.log(\"products -> \".concat(JSON.stringify(products)));store.dispatch({type:PRODUCTS_FETCHED,payload:{products:products}});client.product.fetchAll().then(function(products2){// Do something with the products\nconsole.log(\"products2 -> \",products2);});query={query:\"product_type:'9MM' \",//AND tag:'aeropress' OR tag:'espresso'\",\nsortBy:\"test\"};client.product.fetchQuery(query).then(function(products3){console.log(\"products3 -> \",products3);});//console.log(`products -> ${JSON.stringify(products)}`);\n//console.log(`about to cart -> ${JSON.stringify(client.checkout.create())}`);\n// cart\n//const cart = await client.checkout.create();\n//store.dispatch({ type: CHECKOUT_CREATED, payload: { cart } });\n//console.log(`cart -> ${JSON.stringify(cart)}`);\n// shop\n//const shop = await client.shop.fetchInfo();\n//store.dispatch({ type: SHOP_INFO_FETCHED, payload: { shop } });\n//console.log(`shop -> ${JSON.stringify(shop)}`);\ncase 10:case\"end\":return _context.stop();}}},_callee);}));return _setupConnection.apply(this,arguments);}setupConnection();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Products,{}),/*#__PURE__*/_jsx(Cart,{})]});};export default ProductListing;","map":{"version":3,"sources":["/Users/yellowcitytech/Dropbox/RCC/rcc-brass-website/src/components/shop/ProductListing.tsx"],"names":["store","Client","CLIENT_CREATED","PRODUCTS_FETCHED","Cart","Products","ProductListing","setupConnection","client","buildClient","storefrontAccessToken","domain","dispatch","type","payload","product","fetchAll","products","console","log","JSON","stringify","then","products2","query","sortBy","fetchQuery","products3"],"mappings":"iVACA,OAASA,KAAT,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,OACIC,cADJ,CAEIC,gBAFJ,KAKO,2BALP,CAMA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,6IAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,SAEZC,CAAAA,eAFY,uJAE3B,6JACQC,MADR,CACiBP,MAAM,CAACQ,WAAP,CAAmB,CAChCC,qBAAqB,CAAE,kCADS,CAEhCC,MAAM,CAAE,+BAFwB,CAAnB,CADjB,CAME;AAEAX,KAAK,CAACY,QAAN,CAAe,CAAEC,IAAI,CAAEX,cAAR,CAAwBY,OAAO,CAAE,CAAEN,MAAM,CAANA,MAAF,CAAjC,CAAf,EAEA;AAEM;AAZR,sBAa+BA,CAAAA,MAAM,CAACO,OAAP,CAAeC,QAAf,CAAwB,CAAxB,CAb/B,QAacC,QAbd,eAcQC,OAAO,CAACC,GAAR,uBAA2BC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA3B,GACAjB,KAAK,CAACY,QAAN,CAAe,CACXC,IAAI,CAAEV,gBADK,CAEXW,OAAO,CAAE,CACLG,QAAQ,CAARA,QADK,CAFE,CAAf,EAOAT,MAAM,CAACO,OAAP,CAAeC,QAAf,GAA0BM,IAA1B,CAA+B,SAACC,SAAD,CAAe,CAC5C;AACAL,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BI,SAA7B,EACD,CAHD,EAKIC,KA3BZ,CA2BoB,CACVA,KAAK,CAAE,qBADG,CACoB;AAC9BC,MAAM,CAAE,MAFE,CA3BpB,CAgCQjB,MAAM,CAACO,OAAP,CAAeW,UAAf,CAA0BF,KAA1B,EAAiCF,IAAjC,CAAsC,SAACK,SAAD,CAAe,CACnDT,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BQ,SAA7B,EACD,CAFD,EAIA;AAGA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AApDR,uDAF2B,kDA0D3BpB,eAAe,GAGf,mBACE,wCACA,KAAC,QAAD,IADA,cAEA,KAAC,IAAD,IAFA,GADF,CAMD,CAnED,CAqEA,cAAeD,CAAAA,cAAf","sourcesContent":["import { Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport { store } from \"../../store\";\nimport Client from \"shopify-buy\";\nimport {\n    CLIENT_CREATED,\n    PRODUCTS_FETCHED,\n    CHECKOUT_CREATED,\n    SHOP_INFO_FETCHED,\n} from \"../../store/shopify/types\";\nimport Cart from \"./Cart\";\nimport Products from \"./Products\";\n\nconst ProductListing = () => {\n\n  async function setupConnection() {\n    const client = Client.buildClient({\n      storefrontAccessToken: \"a1178a7f9b78103ca595c3965e8075c9\",\n      domain: \"rcc-test-store2.myshopify.com\",\n    });\n\n    //console.log(`client -> ${JSON.stringify(client)}`);\n  \n    store.dispatch({ type: CLIENT_CREATED, payload: { client } });\n  \n    //console.log(`about to build products -> ${JSON.stringify(client.product.fetchAll())}`);\n\n          // products\n          const products = await client.product.fetchAll(2);\n          console.log(`products -> ${JSON.stringify(products)}`);\n          store.dispatch({\n              type: PRODUCTS_FETCHED,\n              payload: {\n                  products,\n              },\n          });\n\n          client.product.fetchAll().then((products2) => {\n            // Do something with the products\n            console.log(\"products2 -> \", products2);\n          });\n\n          let query = {\n            query: \"product_type:'9MM' \", //AND tag:'aeropress' OR tag:'espresso'\",\n            sortBy: \"test\"\n          }\n          \n          client.product.fetchQuery(query).then((products3) => {\n            console.log(\"products3 -> \", products3);\n          });\n\n          //console.log(`products -> ${JSON.stringify(products)}`);\n\n  \n          //console.log(`about to cart -> ${JSON.stringify(client.checkout.create())}`);\n          \n          // cart\n          //const cart = await client.checkout.create();\n          //store.dispatch({ type: CHECKOUT_CREATED, payload: { cart } });\n\n          //console.log(`cart -> ${JSON.stringify(cart)}`);\n  \n  \n          // shop\n          //const shop = await client.shop.fetchInfo();\n          //store.dispatch({ type: SHOP_INFO_FETCHED, payload: { shop } });\n\n          //console.log(`shop -> ${JSON.stringify(shop)}`);\n  \n  }\n\n  setupConnection();\n  \n\n  return (\n    <>\n    <Products />\n    <Cart />\n    </>\n  )\n}\n\nexport default ProductListing;"]},"metadata":{},"sourceType":"module"}